---
layout: post
title: "Good Code"
date: "2017-06-27 12:41:18 +0530"
published: false
---

#### What are the characteristics of *good code* ?

* **Readability**, well-written code is very easy to understand, is well formatted / indented,
is clean and pretty with no clutter

  *Any fool can write code that a computer can understand. Good programmers write code that humans can understand*
    ~ [Martin Fowler](https://en.wikiquote.org/wiki/Martin_Fowler)

* **Testability**, good code is testable code, code that promotes testability follows the [SOLID](https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)) principles

  * **S**ingle **R**esponsibility **P**rinciple, a Class or a Sub-Routine or a Function should have **only** one responsibility, for example a method to send en email should only be responsible for sending an email. If it is also made responsible to validate the Email, then there are two reasons why this method might change, change in the validation logic / change in the email send logic.

* **Reusability**, some code principles that promote reusability include

  * [**D**on't **R**epeat **Y**ourself](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself)
  * **L**oose **C**oupling
